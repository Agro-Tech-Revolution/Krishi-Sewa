# Generated by Django 3.1.6 on 2021-07-05 04:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('farmers', '0005_auto_20210704_2115'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('comment_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_category', models.CharField(choices=[('False Information', 'False Information'), ('Fake Products', 'Fake Products'), ('Misinformation', 'Misinformation'), ('Something Else', 'Something Else')], default='Misinformation', max_length=50)),
                ('report_description', models.CharField(max_length=200)),
                ('reported_date', models.DateTimeField(auto_now_add=True)),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='products',
            name='prod_added_by',
        ),
        migrations.RemoveField(
            model_name='products',
            name='prod_added_on',
        ),
        migrations.RemoveField(
            model_name='products',
            name='prod_price',
        ),
        migrations.RemoveField(
            model_name='products',
            name='quantity_in_kg',
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.FloatField()),
                ('farmer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers.products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_sold', models.FloatField()),
                ('sold_price', models.FloatField()),
                ('sold_date', models.DateTimeField(auto_now_add=True)),
                ('buyer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buyer_id', to=settings.AUTH_USER_MODEL)),
                ('farmer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='farmer_id', to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers.products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductsForSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_in_kg', models.FloatField()),
                ('price_per_kg', models.FloatField()),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers.products')),
                ('product_comments', models.ManyToManyField(related_name='product_comments', through='farmers.ProductComment', to=settings.AUTH_USER_MODEL)),
                ('product_reports', models.ManyToManyField(related_name='product_reports', through='farmers.ProductReport', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='productreport',
            name='reported_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers.productsforsale'),
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_qty', models.FloatField()),
                ('area', models.FloatField()),
                ('production_date', models.DateTimeField(auto_now_add=True)),
                ('farmer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers.products')),
            ],
        ),
        migrations.AddField(
            model_name='productcomment',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers.productsforsale'),
        ),
        migrations.AddField(
            model_name='products',
            name='products_for_sales',
            field=models.ManyToManyField(related_name='products_for_sale', through='farmers.ProductsForSale', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='products',
            name='products_production',
            field=models.ManyToManyField(related_name='products_production', through='farmers.Production', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='products',
            name='products_stock',
            field=models.ManyToManyField(related_name='products_stock', through='farmers.ProductStock', to=settings.AUTH_USER_MODEL),
        ),
    ]
